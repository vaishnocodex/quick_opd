{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "This is a sample API documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/get-home-data": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Get home page data",
                "description": "Fetches sliders, specialist categories, symptoms, and radiology categories for the home screen.",
                "operationId": "getHomeData",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved home data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Successfully retrieved home data."
                                                },
                                                "category_image_path": {
                                                    "type": "string",
                                                    "example": "/storage/category"
                                                },
                                                "home_slider": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Welcome Slide"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "slider1.jpg"
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://example.com"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "A short description of the slide."
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-04-07T10:00:00Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-04-07T10:00:00Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "specailist_category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Cardiology"
                                                            },
                                                            "parent": {
                                                                "type": "integer",
                                                                "example": null
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "category1.jpg"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "category"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "symptom_category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Headache"
                                                            },
                                                            "parent": {
                                                                "type": "integer",
                                                                "example": null
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "symptom1.jpg"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "symptom"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "radiology_category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "X-Ray"
                                                            },
                                                            "parent": {
                                                                "type": "integer",
                                                                "example": null
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "radiology1.jpg"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "radiology"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error occurred: Something went wrong"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all-specialist-categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all approved specialist categories",
                "description": "Returns a list of approved specialist categories.",
                "operationId": "getAllSpecialCategory",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved special categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Successfully retrieved special categories."
                                                },
                                                "category_image_path": {
                                                    "type": "string",
                                                    "example": "/storage/category"
                                                },
                                                "specialist_category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Cardiology"
                                                            },
                                                            "parent": {
                                                                "type": "integer",
                                                                "example": null
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "cardiology.jpg"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "category"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No special categories found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "No special categories found."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error occurred: Something went wrong"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all-symptom-categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all approved symptom categories",
                "description": "Returns a list of approved symptom categories.",
                "operationId": "getAllSymptomCategory",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved symptom categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Successfully retrieved symptom categories."
                                                },
                                                "category_image_path": {
                                                    "type": "string",
                                                    "example": "/storage/category"
                                                },
                                                "symptom_category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Headache"
                                                            },
                                                            "parent": {
                                                                "type": "integer",
                                                                "example": null
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "headache.jpg"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "symptom"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No symptom categories found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "No symptom categories found."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error occurred: Something went wrong"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all-radiology-categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all approved radiology categories",
                "description": "Returns a list of approved radiology categories.",
                "operationId": "getAllRadiologyCategory",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved radiology categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Successfully retrieved radiology categories."
                                                },
                                                "category_image_path": {
                                                    "type": "string",
                                                    "example": "/storage/category"
                                                },
                                                "radiology_category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "X-Ray"
                                                            },
                                                            "parent": {
                                                                "type": "integer",
                                                                "example": null
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "xray.jpg"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "radiology"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No radiology categories found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "No radiology categories found."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An error occurred: Something went wrong"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "722d44a8acb171a424a9cf1d79ce183c",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/send-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send OTP to a mobile number",
                "operationId": "ab35db0e56ef3e21cee0ebb240b6a4c6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mobile_no"
                                ],
                                "properties": {
                                    "mobile_no": {
                                        "type": "string",
                                        "example": "1111122211"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The mobile_no field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP for a mobile number",
                "operationId": "5993b5d75ac9d0bc3ef1d71f9df223ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mobile_no",
                                    "otp"
                                ],
                                "properties": {
                                    "mobile_no": {
                                        "type": "string",
                                        "example": "1111122211"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "your_generated_token"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset OTP",
                "operationId": "5533a7a7cc736a3d15209876f27fdc0b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact"
                                ],
                                "properties": {
                                    "contact": {
                                        "type": "string",
                                        "example": "user@example.com or 1234554321"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/verify_forget_password_otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP and issue token",
                "operationId": "496b725355b15e92fcad22c1e7ddebbd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact",
                                    "otp"
                                ],
                                "properties": {
                                    "contact": {
                                        "type": "string",
                                        "example": "user@example.com or 1234554321"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "your_generated_token_here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP or OTP expired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/change-password": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Change user password",
                "operationId": "627b3219346974d73d443923b2b1403e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The new password and confirmation password must match."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (if the user is not authenticated)"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/current": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get details of the currently logged-in user",
                "description": "Returns the authenticated user's details if the request is authenticated.",
                "operationId": "1e6a8818198da2ca4621fe75c1f5d13d",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "mobile_no": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "classname": {
                                                    "type": "string",
                                                    "example": "100"
                                                },
                                                "is_pass_create": {
                                                    "type": "integer",
                                                    "example": "1 or 0"
                                                },
                                                "facebook": {
                                                    "type": "string",
                                                    "example": "https://facebook.com/johndoe"
                                                },
                                                "twitter": {
                                                    "type": "string",
                                                    "example": "https://twitter.com/johndoe"
                                                },
                                                "instagram": {
                                                    "type": "string",
                                                    "example": "https://instagram.com/johndoe"
                                                },
                                                "linkedin": {
                                                    "type": "string",
                                                    "example": "https://linkedin.com/in/johndoe"
                                                },
                                                "student": {
                                                    "properties": {
                                                        "school": {
                                                            "type": "string",
                                                            "example": "ABC School"
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "example": "California"
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": "Los Angeles"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/top_category": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get Top Categories",
                "description": "Fetches the top categories that are active and marked as top.",
                "operationId": "0c0f0f5b788359437c213e7a455255b5",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "top_categories_image_path": {
                                                    "type": "string",
                                                    "example": "upload/categories/"
                                                },
                                                "top_categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Electronics"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "parent": {
                                                                "type": "string",
                                                                "example": "0"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "category"
                                                            },
                                                            "is_top": {
                                                                "type": "string",
                                                                "example": "1"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/child_category/{parent_id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get Child Categories",
                "description": "Fetches child categories based on the provided parent category ID.",
                "operationId": "c0712c4635b733759c029f21b8598a61",
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "path",
                        "description": "ID of the parent category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "categories_image_path": {
                                                    "type": "string",
                                                    "example": "upload/categories/"
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Laptops"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "parent": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/all_states": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get All States",
                "description": "Fetches all states for the specified country.",
                "operationId": "7b76ea9fc8fe3564180603f706826046",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "states": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "California"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An unexpected error occurred"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "example": "Exception message"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/all_districts": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get All Districts",
                "description": "Fetches all districts based on the provided state ID.",
                "operationId": "82ae44c89e08338e92744acd93f3576a",
                "parameters": [
                    {
                        "name": "fk_state_id",
                        "in": "query",
                        "description": "ID of the state to fetch districts for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "districts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Los Angeles"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "The fk_state_id field is required."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No districts found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "No districts found for the given state ID"
                                                },
                                                "districts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An unexpected error occurred"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "example": "Exception message"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/get_doctor_bycategory/{category_id}": {
            "get": {
                "tags": [
                    "Doctor"
                ],
                "summary": "Get doctors by specialist category",
                "description": "Fetches a paginated list of doctors by category ID with hospital, city, and state details.",
                "operationId": "getDoctorsBySpecialistCategory",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "Category ID for which doctors are to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doctors fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Doctors fetched successfully"
                                                },
                                                "test_series_image_path": {
                                                    "type": "string",
                                                    "example": "storage/doctor/"
                                                },
                                                "doctors": {
                                                    "description": "Paginated list of doctors with related hospital, city, and state info",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An unexpected error occurred"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/get_doctor_byhospital/{hospital_id}": {
            "get": {
                "tags": [
                    "Doctor"
                ],
                "summary": "Get doctors by hospital ID",
                "description": "Fetches a paginated list of doctors that belong to a specific hospital, including city and state information.",
                "operationId": "getDoctorsByHospital",
                "parameters": [
                    {
                        "name": "hospital_id",
                        "in": "path",
                        "description": "Hospital ID to fetch associated doctors",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doctors fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Doctors fetched successfully"
                                                },
                                                "test_series_image_path": {
                                                    "type": "string",
                                                    "example": "storage/doctor/"
                                                },
                                                "doctors": {
                                                    "description": "Paginated list of doctors from the specified hospital",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An unexpected error occurred"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/get_doctor_bysymptom/{symptom_id}": {
            "get": {
                "tags": [
                    "Doctor"
                ],
                "summary": "Get doctors by symptom ID",
                "description": "Fetches a paginated list of doctors based on a symptom ID. Includes hospital, city, and state information.",
                "operationId": "getDoctorsBySymptom",
                "parameters": [
                    {
                        "name": "symptom_id",
                        "in": "path",
                        "description": "Symptom ID to filter doctors",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doctors fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Doctors fetched successfully"
                                                },
                                                "test_series_image_path": {
                                                    "type": "string",
                                                    "example": "storage/doctor/"
                                                },
                                                "doctors": {
                                                    "description": "Paginated list of doctors matching the symptom",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An unexpected error occurred"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/get_singledoctor_detail/{doctor_id}": {
            "get": {
                "tags": [
                    "Doctor"
                ],
                "summary": "Get single doctor details",
                "description": "Fetches detailed information of a doctor including schedule slots, location, and hospital.",
                "operationId": "getSingleDoctorDetails",
                "parameters": [
                    {
                        "name": "doctor_id",
                        "in": "path",
                        "description": "Doctor ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doctor details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Doctor details fetched successfully"
                                                },
                                                "image_path": {
                                                    "type": "string",
                                                    "example": "storage/doctor/"
                                                },
                                                "doctor": {
                                                    "description": "Doctor detail object",
                                                    "type": "object"
                                                },
                                                "schedule_list": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2025-05-15"
                                                            },
                                                            "start_time": {
                                                                "type": "string",
                                                                "example": "09:00"
                                                            },
                                                            "end_time": {
                                                                "type": "string",
                                                                "example": "13:00"
                                                            },
                                                            "slot_duration": {
                                                                "type": "integer",
                                                                "example": 30
                                                            },
                                                            "max_slot": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "shift": {
                                                                "type": "string",
                                                                "example": "Morning"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid doctor ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid doctor ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Doctor not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Doctor not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An unexpected error occurred"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/get_all_hospitals": {
            "get": {
                "tags": [
                    "Hospital"
                ],
                "summary": "Get list of all active hospitals",
                "description": "Returns a paginated list of hospitals with their details, including state and city names.",
                "operationId": "getAllHospitals",
                "parameters": [
                    {
                        "name": "doctor_id",
                        "in": "path",
                        "description": "Doctor ID (not used in logic, but passed in URL)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hospital list fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Hospital fetched successfully"
                                                },
                                                "test_series_image_path": {
                                                    "type": "string",
                                                    "example": "storage/hospital/"
                                                },
                                                "hospital_list": {
                                                    "description": "Paginated hospital list",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "An unexpected error occurred"
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Home",
            "description": "Home"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "user",
            "description": "user"
        },
        {
            "name": "Locations",
            "description": "Locations"
        },
        {
            "name": "Doctor",
            "description": "Doctor"
        },
        {
            "name": "Hospital",
            "description": "Hospital"
        }
    ],
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter your bearer token in the format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}